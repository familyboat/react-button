{"version":3,"sources":["../../src/Button.tsx","App.tsx","index.tsx"],"names":["ButtonVariant","ButtonType","ButtonBase","children","className","component","isDisabled","isLoading","type","variant","props","Component","isButtonElement","styles","disabled","ref","innerRef","Button","App","ReactDOM","render","document","getElementById"],"mappings":"qPAGA,EAIA,E,yMAJA,SAAYA,GACVA,oBADF,CAAYA,MAAZ,KAIA,SAAYC,GACVA,kBACAA,kBACAA,gBAHF,CAAYA,MAAZ,KAkBA,IAAMC,EAAmD,SAAC,GAAD,QACvDC,gBADuD,MAAC,KAAD,MAEvDC,iBAFuD,MAAC,GAAD,MAGvDC,iBAHuD,MAAC,SAAD,MAIvDC,kBAJuD,aAKvDC,iBALuD,aAMvDC,YANuD,MAMhDP,EANiD,OAAD,MAOvDQ,QAPwD,QAAD,OAO7CT,EAP8C,QAAD,EAAC,UASrDU,EAToD,iBAWjDC,EAAN,EACMC,EAAN,WAAwBD,EAExB,OACE,2CACMD,GACJN,UAAS,UAAKS,EAAL,YAAsBT,GAC/BU,SAAUF,EAAkB,EAAa,KACzCJ,KAAMI,EAAkB,EAAO,KAC/BG,IAAKC,IAEJT,GAAa,gCAAMH,UAAWS,GAPjC,KADF,IAcWI,EAAS,sBACpB,qBACE,yCAAYD,SAAUD,GAFnB,OAMPE,uB,UCzCeC,EAbH,WACV,OACE,oCACE,kBAACD,EAAD,CACEb,UAAU,UACVG,WAAS,GAFX,gBCFNY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.db557415.chunk.js","sourcesContent":["import * as React from 'react'\nimport styles from './styles.module.css'\n\nexport enum ButtonVariant {\n  primary = 'primary'\n}\n\nexport enum ButtonType {\n  button = 'button',\n  submit = 'submit',\n  reset = 'reset'\n}\n\nexport interface ButtonProps\n  extends Omit<React.HTMLProps<HTMLButtonElement>, 'ref'> {\n  children?: React.ReactNode\n  className?: string\n  component?: React.ElementType<any> | React.ComponentType<any>\n  isDisabled?: boolean\n  isLoading?: boolean\n  type?: 'button' | 'submit' | 'reset'\n  variant?: 'primary'\n  innerRef?: React.Ref<any>\n}\n\nconst ButtonBase: React.FunctionComponent<ButtonProps> = ({\n  children = null,\n  className = '',\n  component = 'button',\n  isDisabled = false,\n  isLoading = false,\n  type = ButtonType.button,\n  variant = ButtonVariant.primary,\n  innerRef,\n  ...props\n}: ButtonProps) => {\n  const Component = component as any\n  const isButtonElement = Component === 'button'\n\n  return (\n    <Component\n      {...props}\n      className={`${styles.button} ${className}`}\n      disabled={isButtonElement ? isDisabled : null}\n      type={isButtonElement ? type : null}\n      ref={innerRef}\n    >\n      {isLoading && <span className={styles.spinner}>0</span>}\n      {children}\n    </Component>\n  )\n}\n\nexport const Button = React.forwardRef(\n  (props: ButtonProps, ref: React.Ref<any>) => (\n    <ButtonBase innerRef={ref} {...props} />\n  )\n)\n\nButton.displayName = 'Button'\n","import React from 'react'\n\nimport {Button} from '@familyboat/react-button'\nimport '@familyboat/react-button/dist/index.css'\n\nconst App = () => {\n  return (\n    <>\n      <Button\n        className='primary'\n        isLoading\n      >\n        button one\n      </Button>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}